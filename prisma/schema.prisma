// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

  model user_details{
    id                      Int @id @default(autoincrement())
    name                    String?  
    phone_no                String?  
    email                   String?
    password                String?
    pincode                 String?
    address                 Json?
    updatedDate             DateTime?
    status                  String?
    image                   String?  
    role                    String? 
    location_id             Int?
    created_date            DateTime? 
    customer_wish_list      customer_wish_list[]
    customer_cart           customer_cart[]
    customer_address        customer_address[]
    sales_orders            sales_order[] 
  }

model product_master {
  product_id        Int      @id(map: "PRODUCT_MASTER_pkey") @default(autoincrement())
  product_code      String?  @unique(map: "product_code_unique") @db.VarChar
  product_name      String?  @db.VarChar
  description       String?  @db.VarChar
  product_type      String?  @db.VarChar 
  created_date      DateTime? @db.Timestamp(6)
  updated_date      DateTime? @db.Timestamp(6)
  price             String?  @db.VarChar
  size              String?  @db.VarChar
  color             String?  @db.VarChar
  images            Json?  
  quantity          Int?
  status            String?  @db.VarChar()
  customer_cart     customer_cart[]
  customer_wish_list customer_wish_list[]
  sales_lists  sales_list[]
}


model customer_cart {
  id             Int            @id @default(autoincrement())
  customer_id    Int
  product_id     Int
  quantity       Int
  created_date      DateTime? @db.Timestamp(6)
  user_details   user_details   @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_cart_user_fkey")
  product_master product_master @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "customer_cart_product_fkey")
}

model customer_wish_list {
  id             Int            @id @default(autoincrement())
  customer_id    Int
  product_id     Int
  created_date      DateTime? @db.Timestamp(6)
  user_details   user_details   @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "wish_list_user_fkey")
  product_master product_master @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "wish_list_product_fkey")
}

 model sales_list {
  id              Int               @id @default(autoincrement())
  so_number       Int?
  product_id      Int?
  order_qty       Int?
  sales_price     Int?
  created_date    DateTime?         @db.Timestamp(6) 
  sales_order     sales_order?  @relation(fields: [so_number], references: [sales_id], onDelete: NoAction, onUpdate: NoAction, map: "so_number")
  product_master  product_master? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "wish_list_product_fkey")
}

model sales_order {
  sales_id               Int                      @id @default(autoincrement())
  so_number              String?                  @unique(map: "so_number") @db.VarChar
  total_amount           Decimal?                 @db.Decimal
  so_status              String?                  @db.VarChar
  customer_address       Json?
  address_id             Int?
  created_date           DateTime?                @db.Timestamp(6)
  customer_id            Int?
  sales_list             sales_list[]
  user_details           user_details?            @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_id")
  customer_addressid     customer_address?        @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "address_id")
}


model customer_address {
  id                   Int            @id @default(autoincrement())
  customer_id          Int?
  full_name            String?
  address              String?
  city                 String?
  state                String?
  land_mark            String?
  contact_number       String?
  pincode              Int?
  default              Boolean?
  active_flag          Boolean?
  created_date         DateTime?                @db.Timestamp(6)
  sales_order          sales_order[]
  user_details         user_details?   @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "wish_list_user_fkey")
}